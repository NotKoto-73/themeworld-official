#!/usr/bin/env bash
# boot/loaderlands/tools/create-plymouth-dedsec.sh
# Automated DedSec Plymouth theme creation

set -euo pipefail

THEME_NAME="${1:-dedsec-wannacry}"
FRAME_COUNT="${2:-24}"
BASE_DIR="boot/themes/plymouth/variants"

create_plymouth_theme() {
    local theme_name="$1"
    local frame_count="$2"
    
    echo "Creating Plymouth theme: $theme_name"
    
    # 1. Create theme directory
    mkdir -p "$BASE_DIR/$theme_name"
    cd "$BASE_DIR/$theme_name"
    
    echo "Theme directory created: $BASE_DIR/$theme_name"
    
    # 2. Check for PNG assets
    if [[ ! -f "001.png" ]]; then
        echo "Warning: No PNG assets found in $PWD"
        echo "Please add your .png animation frames (001.png, 002.png, etc.)"
        echo "You can extract these from DedSec assets or create your own"
        
        # Create placeholder assets for testing
        echo "Creating placeholder assets for testing..."
        for i in $(seq -w 1 $frame_count); do
            # Create simple colored rectangles as placeholders
            convert -size 64x64 xc:"#$(printf '%02x%02x%02x' $((RANDOM%256)) $((RANDOM%256)) $((RANDOM%256)))" "${i}.png"
        done
        echo "Created $frame_count placeholder frames"
    fi
    
    # 3. Create theme definition file
    cat > "$theme_name.plymouth" << EOF
[Plymouth Theme]
Name=$theme_name
Description=DedSec $theme_name style boot animation
Comment=Hacker-themed Plymouth boot splash
ModuleName=script

[script]
ImageDir=/usr/share/plymouth/themes/$theme_name
ScriptFile=/usr/share/plymouth/themes/$theme_name/$theme_name.script
EOF
    
    echo "Created $theme_name.plymouth"
    
    # 4. Create animation script
    cat > "$theme_name.script" << 'EOF'
# DedSec Plymouth Animation Script
# Auto-generated by FoxOS Themeworld

# Animation settings
image_quantity = FRAME_COUNT_PLACEHOLDER;
frame_delay = 0.1;

# Screen setup
Window.SetBackgroundTopColor(0.0, 0.0, 0.0);     # Black background
Window.SetBackgroundBottomColor(0.1, 0.0, 0.0);  # Dark red tint

# Load animation frames
for (i = 1; i <= image_quantity; i++) {
    image_name = sprintf("%03d.png", i);
    images[i] = Image(image_name);
}

# Animation state
frame = 1;
sprite = Sprite();
sprite.SetPosition(Window.GetWidth() / 2 - images[1].GetWidth() / 2,
                  Window.GetHeight() / 2 - images[1].GetHeight() / 2);

# Animation loop
fun refresh() {
    sprite.SetImage(images[frame]);
    frame++;
    if (frame > image_quantity) frame = 1;
}

# Plymouth hooks
Plymouth.SetRefreshFunction(refresh);
Plymouth.SetBootProgressFunction(refresh);
Plymouth.SetRootMountedFunction(refresh);
Plymouth.SetKeyboardInputFunction(refresh);
Plymouth.SetUpdateStatusFunction(refresh);

# Boot progress display
fun boot_progress_cb(duration, progress) {
    # Could add progress bar here if desired
}

Plymouth.SetBootProgressFunction(boot_progress_cb);
EOF
    
    # Replace placeholder with actual frame count
    sed -i "s/FRAME_COUNT_PLACEHOLDER/$frame_count/" "$theme_name.script"
    
    echo "Created $theme_name.script with $frame_count frames"
    
    # 5. Create animated GIF preview
    if command -v magick >/dev/null 2>&1; then
        echo "Creating animated preview..."
        magick convert -delay 10 -loop 0 -background black $(ls -v *.png) -alpha remove "$theme_name.gif"
        echo "Created $theme_name.gif preview"
    else
        echo "ImageMagick not found, skipping GIF creation"
    fi
    
    # 6. Create installation script
    cat > "install.sh" << EOF
#!/bin/bash
# Install script for $theme_name Plymouth theme

THEME_DIR="/usr/share/plymouth/themes/$theme_name"

echo "Installing $theme_name Plymouth theme..."

# Create theme directory
sudo mkdir -p "\$THEME_DIR"

# Copy theme files
sudo cp -r * "\$THEME_DIR/"

# Set proper permissions
sudo chmod 644 "\$THEME_DIR"/*

# Set as default theme
sudo plymouth-set-default-theme $theme_name

# Update initramfs
sudo update-initramfs -u

echo "$theme_name theme installed successfully!"
echo "Reboot to see the new boot animation."
EOF
    
    chmod +x install.sh
    echo "Created install.sh"
    
    # 7. Generate Nix package
    cat > "$theme_name.nix" << EOF
# Nix package for $theme_name Plymouth theme
{ pkgs, lib }:

pkgs.stdenv.mkDerivation {
  name = "plymouth-$theme_name";
  version = "1.0.0";
  
  src = ./.;
  
  installPhase = ''
    mkdir -p \$out/share/plymouth/themes/$theme_name
    cp -r * \$out/share/plymouth/themes/$theme_name/
    chmod 644 \$out/share/plymouth/themes/$theme_name/*
  '';
  
  meta = with lib; {
    description = "DedSec $theme_name Plymouth boot theme";
    license = licenses.gpl3;
    platforms = platforms.linux;
  };
}
EOF
    
    echo "Created $theme_name.nix package"
    
    cd - > /dev/null
    
    echo ""
    echo "Plymouth theme '$theme_name' created successfully!"
    echo "Location: $BASE_DIR/$theme_name"
    echo ""
    echo "Next steps:"
    echo "1. Add your .png animation frames to replace placeholders"
    echo "2. Test with: sudo plymouth-show-splash && sleep 3 && sudo plymouth quit"
    echo "3. Install with: cd $BASE_DIR/$theme_name && sudo ./install.sh"
    echo "4. Or integrate into NixOS with the generated .nix file"
}

# Update modules.nix to include new theme
update_modules_config() {
    local theme_name="$1"
    local modules_file="boot/loaderlands/plymouth/plymouth-final.nix"
    
    if [[ -f "$modules_file" ]]; then
        echo "Updating $modules_file to include $theme_name..."
        
        # Add theme to enum list (this is a simplified approach)
        if grep -q "type = lib.types.enum" "$modules_file"; then
            sed -i "s/type = lib.types.enum \[ \(.*\) \]/type = lib.types.enum [ \1 \"$theme_name\" ]/" "$modules_file"
            echo "Added $theme_name to theme options"
        fi
    fi
}

# Show help
show_help() {
    echo "Plymouth DedSec Theme Creator"
    echo "============================="
    echo ""
    echo "Usage: $0 [THEME_NAME] [FRAME_COUNT]"
    echo ""
    echo "Arguments:"
    echo "  THEME_NAME   Name of the theme to create (default: dedsec-wannacry)"
    echo "  FRAME_COUNT  Number of animation frames (default: 24)"
    echo ""
    echo "Examples:"
    echo "  $0 dedsec-wannacry 24"
    echo "  $0 dedsec-sitedown 30"
    echo "  $0 my-custom-theme 16"
    echo ""
    echo "This script will:"
    echo "  - Create theme directory structure"
    echo "  - Generate .plymouth and .script files"
    echo "  - Create installation script"
    echo "  - Generate Nix package file"
    echo "  - Create animated GIF preview (if ImageMagick available)"
}

# Main execution
case "${1:-}" in
    -h|--help|help)
        show_help
        ;;
    *)
        create_plymouth_theme "$THEME_NAME" "$FRAME_COUNT"
        update_modules_config "$THEME_NAME"
        ;;
esac